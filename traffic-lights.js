noise(() => 1 - time * 10, 0.3)
	.color(() => a.fft[1] * 1.1, () => a.fft[2] * 1.2, () => a.fft[3] * 1.5)
	.scale(() => 20 + time / 20)
	.modulateScale(voronoi(14)
		.modulateScale(gradient()
			.color(0, () => Math.sin(time) / 4 + 1, 0)
			.rotate(Math.PI), -1)
		.modulate(osc(12, 0.5))

		.rotate(Math.PI / 4 * 3)
		.rotate(() => time / 10), 2)
	.blend(src(o0)
		.scale(1.3), 0.7)
	.scrollX(() => Math.sin(time) / 20)
	.scrollY(() => Math.sin(time + Math.PI / 2) / 20)
	.out(o0)

src(o0)
	.add(osc(11, 1.1, 1.2).brightness(() => a.fft[0] - 0.2)
		.rotate(Math.PI / 4)
		.mult(shape(40, 0.01, 0.5)
			.scale(() => 1 + a.fft[0], () => 16 / 9 + a.fft[0])
			.repeat(() => Math.sin(time / 4) * 4 + 8)
//             .kaleid(6)
//               .scrollX(0, 1.2)
//               .scrollY(() => Math.sin(time / 4))
// 			.modulateScale(noise(() => time / 20, 0.3) ,() => a.fft[0] * 0.4)
		))
	.blend(src(o1).scale(0.9), 0.6)
// 	.modulateScale(osc(10, 1))
// .modulateRotate(osc(10, 1))
// .modulateScrollY(osc(10, 1))
	.out(o1)

render(o1)
